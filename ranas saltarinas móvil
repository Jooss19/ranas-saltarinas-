from kivy.app import App
from kivy.uix.label import Label
from kivy.uix.button import Button
from kivy.uix.gridlayout import GridLayout
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.popup import Popup
from kivy.clock import Clock
from kivy.graphics import Color, Ellipse
from kivy.uix.widget import Widget
import time

class JuegoDeRanas(App):
    def build(self):
        self.estado = ['m', 'm', 'm', ' ', 'v', 'v', 'v']  # 'm' para marrón, 'v' para verde, ' ' para piedra vacía
        self.tiempo = 0
        self.tiempo_movimiento = 60
        self.start_time = time.time()
        
        self.root = BoxLayout(orientation='vertical')
        
        self.title_label = Label(text="Juego de las Ranas Saltarinas", font_size='24sp')
        self.creators_label = Label(text="Creadores: Josué Justavino y Angelika Pérez", font_size='18sp')
        self.start_button = Button(text="Iniciar Juego", font_size='18sp', on_press=self.start_game)
        
        self.root.add_widget(self.title_label)
        self.root.add_widget(self.creators_label)
        self.root.add_widget(self.start_button)
        
        return self.root
    
    def clear_window(self):
        self.root.clear_widgets()

    def start_game(self, instance):
        self.clear_window()
        self.init_game_variables()
        self.setup_game_ui()
        Clock.schedule_interval(self.actualizar_tiempo, 1)

    def init_game_variables(self):
        self.estado = ['m', 'm', 'm', ' ', 'v', 'v', 'v']  # 'm' para marrón, 'v' para verde, ' ' para piedra vacía
        self.tiempo = 0
        self.tiempo_movimiento = 60
        self.start_time = time.time()

    def setup_game_ui(self):
        self.grid = GridLayout(cols=7, size_hint=(1, 0.2))
        self.botones = []
        for i in range(7):
            b = Button(text='', font_size='18sp', on_press=lambda instance, i=i: self.mover_rana(i))
            self.grid.add_widget(b)
            self.botones.append(b)
        
        self.root.add_widget(self.grid)
        
        self.label_tiempo = Label(text=f"Tiempo total: {self.tiempo}s", font_size='18sp')
        self.label_tiempo_movimiento = Label(text=f"Tiempo de movimiento: {self.tiempo_movimiento}s", font_size='18sp')
        
        self.root.add_widget(self.label_tiempo)
        self.root.add_widget(self.label_tiempo_movimiento)
        
        self.reiniciar_button = Button(text="Reiniciar Juego", font_size='18sp', on_press=self.reset_game)
        self.salir_button = Button(text="Salir", font_size='18sp', on_press=self.stop)
        
        self.root.add_widget(self.reiniciar_button)
        self.root.add_widget(self.salir_button)
        
        self.actualizar_botones()

    def actualizar_tiempo(self, dt):
        self.tiempo += 1
        self.tiempo_movimiento -= 1
        self.label_tiempo.text = f"Tiempo total: {self.tiempo}s"
        self.label_tiempo_movimiento.text = f"Tiempo de movimiento: {self.tiempo_movimiento}s"

        if self.tiempo_movimiento == 0:
            popup = Popup(title='Tiempo agotado',
                          content=Label(text='El tiempo para mover una rana se ha agotado.'),
                          size_hint=(None, None), size=(400, 200))
            popup.open()
            self.reset_game()

    def actualizar_botones(self):
        colores = {'m': [0.55, 0.27, 0.07, 1], 'v': [0, 1, 0, 1], ' ': [0.83, 0.83, 0.83, 1]}
        for i in range(7):
            self.botones[i].background_color = colores[self.estado[i]]
            self.botones[i].text = 'Rana' if self.estado[i] in ['m', 'v'] else ' '
    
    def mover_rana(self, i):
        if self.estado[i] == 'v':
            if i - 1 >= 0 and self.estado[i - 1] == ' ':
                self.estado[i], self.estado[i - 1] = self.estado[i - 1], self.estado[i]
            elif i - 2 >= 0 and self.estado[i - 2] == ' ' and self.estado[i - 1] in ('m', 'v'):
                self.estado[i], self.estado[i - 2] = self.estado[i - 2], self.estado[i]
        elif self.estado[i] == 'm':
            if i + 1 < 7 and self.estado[i + 1] == ' ':
                self.estado[i], self.estado[i + 1] = self.estado[i + 1], self.estado[i]
            elif i + 2 < 7 and self.estado[i + 2] == ' ' and self.estado[i + 1] in ('m', 'v'):
                self.estado[i], self.estado[i + 2] = self.estado[i + 2], self.estado[i]
        self.tiempo_movimiento = 60
        self.actualizar_botones()
        self.verificar_ganador()

    def verificar_ganador(self):
        if self.estado == ['v', 'v', 'v', ' ', 'm', 'm', 'm']:
            end_time = time.time()
            elapsed_time = end_time - self.start_time
            popup = Popup(title='Juego Terminado',
                          content=Label(text=f'¡Felicidades! Lo lograste en {elapsed_time:.2f} segundos.'),
                          size_hint=(None, None), size=(400, 200))
            popup.open()
            self.reset_game()
    
